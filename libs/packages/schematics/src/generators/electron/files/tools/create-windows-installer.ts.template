/**
 * See Docs at https://github.com/electron-userland/electron-wix-msi#should-i-use-this
 */
// 1. Import Modules
import { MSICreator } from 'electron-wix-msi';
import { resolve } from 'path';
import { config } from '../src/config';

// Checks for --arch and if it has a value
const archArg = process.argv.find((i: string) => {
  return i.includes('--arch');
});

// Default to arm64 ( m1 )
let arch = 'arm64';


if (archArg) {
  // Retrieve the value of --arch
  arch = archArg.split('=')[1];
}

// Checks for --arch and if it has a value
const platformArg = process.argv.find((i: string) => {
  return i.includes('--platform');
});

// Default to arm64 ( m1 )
let platform = 'darwin';


if (platformArg) {
  // Retrieve the value of --platform
  platform = platformArg.split('=')[1];
}


console.log(`Platform: ${platform}`);
console.log(`Arch: ${arch}`);


// 2. Define input and output directory.
// Important: the directories must be absolute, not relative e.g
// appDirectory: "C:\\Users\sdkca\Desktop\OurCodeWorld-win32-x64",
const APP_DIR = resolve(__dirname, `../package/${config.applicationName}-${platform}-${arch}/${config.applicationName}`);
// outputDirectory: "C:\\Users\sdkca\Desktop\windows_installer",
const OUT_DIR = resolve(__dirname, './windows_installer');

// 3. Instantiate the MSICreator
const msiCreator = new MSICreator({
  appDirectory: APP_DIR,
  outputDirectory: OUT_DIR,

  // Configure metadata
  description: 'This is a demo application',
  exe: 'OurCodeWorld',
  name: 'Our Code World Desktop App',
  manufacturer: 'Our Code World Inc',
  version: '1.0.0',

  // Configure installer User Interface
  ui: {
    chooseDirectory: true
  },
});

// 4. Create a .wxs template file
msiCreator.create().then(function(){

  // Step 5: Compile the template to a .msi file
  msiCreator.compile();
});
