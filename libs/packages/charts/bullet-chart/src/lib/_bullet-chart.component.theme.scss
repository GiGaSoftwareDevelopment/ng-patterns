@use "sass:map";
@use "@angular/material" as mat;
@use "../../../src/lib/styles/chart.variables" as var;

@mixin color($theme) {
  // Get the color config from the theme.
  $color-config: mat.get-color-config($theme);
  $primary-palette: map.get($color-config, "primary");
  $accent-palette: map.get($color-config, "accent");
  $warn-palette: map.get($color-config, "warn");
  $is-dark-theme: map.get($color-config, "is-dark");

  // Get the primary color palette from the color-config.
  $primary-color: mat.get-color-from-palette($primary-palette, 500);

  // class set in component ts file
  // @HostBinding('class.login-component') bind = true;
  // hsla(0,0%,100%,.3)
  .t-uiux-bullet-chart {
    .t-bullet-background-bar {
      //fill: mat.get-color-from-palette($primary-palette, 100);
      fill: var.$background-dark;
      //opacity: 0.25;
    }

    .t-bullet-progress-bar-primary {
      fill: mat.get-color-from-palette($primary-palette, 500);
    }

    .t-bullet-progress-indicator-primary {
      fill: mat.get-color-from-palette($accent-palette, 500);
    }

    .t-bullet-chart-limit {
      fill: $primary-color;

      // Used in d3 typescript "t-bullet-chart-limit--left"
      &--left {
        fill: $primary-color;
      }

      // Used in d3 typescript "t-bullet-chart-limit--right"
      &--right {
        fill: $primary-color;
      }
    }
  }

  @if ($is-dark-theme) {
    .t-uiux-bullet-chart {
      .t-bullet-background-bar {
        fill: var.$background-light;
        opacity: 0.25;
      }
    }
  }
}

@mixin typography($theme) {
  // Get the typography config from the theme.
  $typography-config: mat.get-typography-config($theme);
  $title: map.get($typography-config, 'subtitle-1');

  .uiux-bullet-chart-title {
    font-size: map.get($title, 'font-size');
    line-height: map.get($title, 'line-height');
    font-weight: map.get($title, 'font-weight');
    font-family: map.get($title, 'font-family');
    letter-spacing: map.get($title, 'letter-spacing');

  }
}

@mixin theme($theme) {
  $color-config: mat.get-color-config($theme);
  @if $color-config != null {
    @include color($theme);
  }

  $typography-config: mat.get-typography-config($theme);
  @if $typography-config != null {
    @include typography($theme);
  } @else {
    @include typography(map.merge($theme, (
      typography: mat.define-typography-config()
    )));
  }
}
