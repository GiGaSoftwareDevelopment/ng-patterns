@use 'sass:map';
@use '@angular/material' as mat;
@use './chart.variables' as var;
@use './constants';

@mixin styles() {
  .p-ui-chart-container {
    width: 100%;
    height: 100%;
    overflow: hidden;
    svg {
      width: 100%;
      height: 100%;
    }
  }
}

@mixin color($theme) {
  // Get the color config from the theme.
  $color-config: mat.get-color-config($theme);
  $primary-palette: map.get($color-config, 'primary');
  $accent-palette: map.get($color-config, 'accent');
  $warn-palette: map.get($color-config, 'warn');
  $is-dark-theme: map.get($color-config, 'is-dark');
  $background-object: map.get($color-config, "background");
  $tooltip-background-color: map.get($background-object, tooltip);

  $tooltip-border: mat.get-color-from-palette($accent-palette, 500);

  $success-foreground-color: mat.get-contrast-color-from-palette(mat.$green-palette, 500);
  $success-background-color: mat.get-color-from-palette(mat.$green-palette, 500);

  $warn-background-color: mat.get-color-from-palette($accent-palette, 500);

  $error-foreground-color: mat.get-contrast-color-from-palette($warn-palette, 500);
  $error-background-color: mat.get-color-from-palette($warn-palette, 500);


  // class set in component ts file
  // @HostBinding('class.login-component') bind = true;
  .p-ui-chart-container {
  }

  .p-chart-data-success-background {
    background-color: $success-background-color;
    fill: $success-background-color;
  }

  .p-chart-data-success-foreground {
    color: $success-foreground-color;
  }

  .p-chart-data-warn-background {
    background-color: $warn-background-color;
    fill: $warn-background-color;
  }

  .p-chart-data-warn-foreground {
    color: $error-foreground-color;
  }

  .p-chart-data-error-background {
    background-color: $error-background-color;
    fill: $error-background-color;
  }

  .p-chart-data-error-foreground {
    color: $error-foreground-color;
  }

  .p-tooltip-container {
    width: 100%;
    position: relative;
  }

  .p-chart-tooltip {
    border: none;
    padding: 0;
    margin-bottom: 0;
    color: mat.get-color-from-palette($accent-palette, 500);
    background-color: white;
    opacity: 0;
    border-radius: constants.$border-radius;

    &.p-chart-data-success {
      color: $success-foreground-color;
      border-color: $success-background-color;

      .p-tooltip-text {
        color: $success-foreground-color;
      }
    }

    &.p-chart-data-warn {
      color: $error-foreground-color;
      border-color: $warn-background-color;

      .p-tooltip-text {
        color: mat.get-contrast-color-from-palette($accent-palette, 500);
      }
    }

    &.p-chart-data-error {
      color: $error-foreground-color;
      border-color: $error-background-color;
      .p-tooltip-text {
        color: $error-foreground-color;
      }
    }
  }

  .p-chart-tooltip-visible {
    opacity: 1;
    padding: 10px;
    margin-bottom: 15px;
    border: 1px solid $tooltip-border;
  }

  .p-chart-tooltip-reversed {
    .p-chart-tooltip {
      background-color: $tooltip-border;
      color: mat.get-contrast-color-from-palette($primary-palette, 500);

      &.p-chart-data-success {
        background-color: $success-background-color;
        fill: $success-background-color;

        &.p-chart-tooltip-divot:before {
          background-color: $success-background-color;
          fill: $success-background-color;
          border-color: $success-background-color;
        }

        .p-tooltip-text {
          color: $success-foreground-color;
        }
      }

      &.p-chart-data-warn {
        background-color: $warn-background-color;
        fill: $warn-background-color;

        &.p-chart-tooltip-divot:before {
          background-color: $warn-background-color;
          fill: $warn-background-color;
          border-color: $warn-background-color;
        }

        .p-tooltip-text {
          color: mat.get-contrast-color-from-palette($accent-palette, 500);
        }
      }

      &.p-chart-data-error {
        background-color: $error-background-color;
        fill: $error-background-color;

        &.p-chart-tooltip-divot:before {
          background-color: $error-background-color;
          fill: $error-background-color;
          border-color: $error-background-color;
        }

        .p-tooltip-text {
          color: $error-foreground-color;
        }
      }
    }

    .p-chart-tooltip-divot:before {
      background: $tooltip-border;
    }
  }

  .p-chart-tooltip-divot:before {
    content: '';
    position: absolute;
    bottom: 0;
    left: 50%;
    width: 12px;
    height: 12px;
    background: white;
    border: 1px solid $tooltip-border;
    border-top-color: transparent;
    border-left-color: transparent;
    transform: translate(-50%, 50%) rotate(45deg);
    transform-origin: center center;
    z-index: 10;
  }

  @if ($is-dark-theme) {
    .p-chart-tooltip {
      background-color: $tooltip-background-color;
    }
    .p-chart-tooltip-divot:before {
      background-color: $tooltip-background-color;
    }
  }
}

@mixin typography($theme) {
  // Get the typography config from the theme.
  $typography-config: mat.get-typography-config($theme);
}

@mixin theme($theme) {
  $color-config: mat.get-color-config($theme);
  @if $color-config != null {
    @include color($theme);
  }

  $typography-config: mat.get-typography-config($theme);
  @if $typography-config != null {
    @include typography($theme);
  }
}
